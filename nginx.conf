# Configuración principal de Nginx
# user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Configuración de eventos
events {
    worker_connections 1024;
}

# Configuración HTTP
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Configuración de logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Configuración del servidor
    server {
        listen 8080 default_server; # Cloud Run expone el puerto 8080

        # Aumentar el timeout
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;

        # Raíz por defecto para el frontend (sirve el contenido de /var/www/html)
        root /var/www/html;
        index index.html index.htm;

        # Reglas para el frontend (SPA) - Cualquier ruta que no sea /backend/
        location / {
            try_files $uri $uri/ /index.html;
            
            # Permitir todos los métodos HTTP
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # Bloque de ubicación para manejar todas las solicitudes PHP que empiezan con /backend/
        # Ejemplo de URL: /backend/controllers/profileController.php
        location ~ ^/backend/(.+\.php)$ {
            # 'root /var/www/;' significa que, para una solicitud /backend/...,
            # Nginx buscará el archivo en /var/www/backend/...
            root /var/www/;

            # Pasa la solicitud a PHP-FPM
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php; # Define el archivo de índice si la URL apunta a un directorio
            include fastcgi_params; # Incluye parámetros FastCGI estándar

            # Aumentar timeouts para FastCGI
            fastcgi_connect_timeout 600;
            fastcgi_send_timeout 600;
            fastcgi_read_timeout 600;
            
            # Configuración de SCRIPT_FILENAME
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            
            # Pasar todas las cabeceras importantes
            fastcgi_param HTTP_AUTHORIZATION $http_authorization;
            fastcgi_param HTTP_X_FORWARDED_FOR $proxy_add_x_forwarded_for;
            fastcgi_param HTTP_X_FORWARDED_PROTO $scheme;
            
            # Manejo de errores
            fastcgi_intercept_errors on;
            error_page 404 /404.html;
            error_page 500 502 503 504 /50x.html;
            
            # Opcional: Asegúrate de que el archivo PHP exista antes de pasarlo a FPM
            try_files $fastcgi_script_name =404;
        }

        # Si tu backend también sirve archivos estáticos (CSS, JS, imágenes) bajo /backend/
        # y que no son PHP, necesitarías un bloque adicional como este:
        location /backend/ {
            root /var/www/;
            try_files $uri $uri/ =404;
        }
    }
}